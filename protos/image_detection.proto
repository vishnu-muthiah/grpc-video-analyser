/**
  Image detection service
  -----------------------

  This service allows users to use an object detection model to detect objects
  within their images. The type of object detector can be configured upon server
  startup.
 */


syntax = "proto3";

package ObjDet.Grpc;

service ImageDetection {
  /**
    Returns the list of objects detectable by object detection model(s) in the server.
   */
  rpc GetDetectableObjects(DetectableObjectsRequest) returns (DetectableObjectsResponse) {}

  /**
    Runs object detector(s) on the provided image and returns detections.
   */
  rpc DetectImage(ImageDetectionRequest) returns (ImageDetectionResponse) {}
}

message DetectableObjectsRequest {
  /*
    Unused.

    A placeholder message for future use since gRPC APIs can't be called without
    requests.
   */
}

message DetectableObjectsResponse {
  // Objects that this server is able to detect.
  repeated string available_object = 1;
}

message ImageDetectionRequest {
  /**
    Image to run detector on. The provided byte stream can be an image encoded
    in common formats such as JPG & PNG (like the contents of image files) or it
    can be a raw image. Must be less than 2^32 bytes.
   */
  bytes image = 1;
}

message Detection {
  string object_name = 1; // human-readable name of the object
  /**
    How confident the detector was, as a probabilistic measure, while predicting
    the presence of this object at this location within the frame. If the detector
    is not capable of producing confidence scores, this will always be 0.0.
   */
  float confidence = 3;
  /**
    Coordinates indicating the region of the detected object within the image.
    Y-axis's zeroth position is at the top of frame. Note: Some detectors might
    predict boxes that extend out of the image's dimensions.
   */
  int32 top_left_x = 5;
  int32 top_left_y = 7;
  int32 width = 9;
  int32 height = 11;
}

message ImageDetectionResponse {
  repeated Detection detections = 1;
}
